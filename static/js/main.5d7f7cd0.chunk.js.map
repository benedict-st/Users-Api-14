{"version":3,"sources":["reportWebVitals.js","app/utils/validator.js","app/api/fake.api/professions.api.js","app/api/fake.api/user.api.js","app/api/fake.api/qualities.api.js","app/api/fake.api/comments.api.js","app/api/index.js","app/components/common/form/textField.jsx","app/components/common/form/selectField.jsx","app/components/common/form/radioField.jsx","app/components/common/form/multiSelectField.jsx","app/components/common/backButton.jsx","app/components/page/editUserPage/index.js","app/components/page/editUserPage/editUserPage.jsx","app/components/ui/userCard.jsx","app/services/http.service.js","app/services/quality.service.js","app/hooks/useQualities.jsx","app/components/ui/qualities/quality.jsx","app/components/ui/qualities/index.js","app/components/ui/qualities/qualitiesList.jsx","app/components/ui/qualitiesCard.jsx","app/components/ui/meetingsCard.jsx","app/utils/displayDate.js","app/components/common/comments/comment.jsx","app/components/common/comments/commentsList.jsx","app/components/common/form/textAreaField.jsx","app/components/common/comments/addCommentForm.jsx","app/components/common/comments/index.js","app/components/ui/comments.jsx","app/components/page/userPage/index.js","app/components/page/userPage/userPage.jsx","app/components/common/pagination.jsx","app/components/common/groupList.jsx","app/components/ui/searchStatus.jsx","app/components/common/bookmark.jsx","app/components/common/table/tableBody.jsx","app/components/common/table/tableHeader.jsx","app/components/common/table/index.js","app/components/common/table/table.jsx","app/services/profession.service.js","app/hooks/useProfession.jsx","app/components/ui/profession.jsx","app/components/ui/usersTable.jsx","app/services/user.service.js","app/hooks/useUsers.jsx","app/components/page/usersListPage/index.js","app/components/page/usersListPage/usersListPage.jsx","app/utils/paginate.js","app/layouts/users.jsx","app/components/common/form/checkBoxField.jsx","app/components/ui/loginForm.jsx","app/components/ui/registerForm.jsx","app/layouts/login.jsx","app/layouts/main.jsx","app/components/ui/navBar.jsx","app/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","validator","data","config","errors","validate","validateMethod","statusValidate","trim","test","length","value","message","fieldName","error","professionsObject","doctor","_id","name","waiter","physics","engineer","actor","cook","fetchAll","Promise","resolve","window","setTimeout","qualities","tedious","color","strange","buller","alcoholic","handsome","uncertain","users","email","sex","profession","professions","completedMeetings","rate","bookmark","localStorage","getItem","setItem","JSON","stringify","parse","getById","id","find","user","update","userIndex","findIndex","u","comments","userId","pageId","content","created_at","API","fetchCommentsForUser","filter","c","add","newComment","Date","now","Math","random","toString","substr","push","remove","newComments","x","console","log","TextField","label","type","onChange","useState","showPassword","setShowPassword","className","htmlFor","target","onClick","prevState","defaultProps","SelectField","defaultOption","options","optionsArray","Array","isArray","Object","values","disabled","map","option","RadioField","handleChange","checked","MultiSelectField","defaultValue","isMulti","closeMenuOnSelect","classNamePrefix","BackHistoryButton","history","useHistory","goBack","EditUserPage","useParams","isLoading","setIsLoading","setData","setProfession","setQualities","setErrors","getProfessionById","prof","getQualities","elements","qualitiesArray","elem","quality","transformData","qual","useEffect","api","professionsList","keys","professionName","qualitiesList","optionName","validatorConfig","isRequired","isEmail","isValid","onSubmit","e","preventDefault","UserCard","location","pathname","src","substring","width","role","axios","defaults","baseURL","apiEndpoint","interceptors","response","use","res","status","toast","reject","httpService","get","post","put","delete","qualityEndpoint","qualityService","a","QualitiesContex","React","createContext","QualitiesProvider","children","setError","setLoading","errorCatcher","Provider","getQuality","q","Quality","Qualities","useContext","qualitiListRender","forEach","item","QualitiesCard","MeetingsCard","displayDate","date","parseInt","dateNow","getFullYear","getDate","getHours","minutesDif","getMinutes","toLocaleString","month","day","getMonth","Comment","created","onRemove","setUser","alt","height","CommentsList","comment","TextAreaField","initialData","AddCommentForm","setUsers","arrayOfUsers","Comments","setComments","sortedComments","orderBy","UserPage","Pagination","itemsCount","pageSize","onPageChange","currentPage","pageCount","ceil","pages","_","range","page","GroupList","items","valueProperty","contentProperty","onItemSelect","selectedItem","SearchStatus","number","lastOne","Number","slice","indexOf","renderPhrase","BookMark","rest","TableBody","columns","renderContent","column","component","path","TableHeader","onSort","selectedSort","rendeSortArrow","currentPath","order","undefined","scope","Table","professionService","ProfessionContext","ProfessionProvider","setProfessions","ProfessionService","getProfessionsList","getProfession","p","Profession","UserTable","onToggleBookMark","onDelete","to","userService","UserContext","UserProvider","getUsers","UsersListPage","setCurrentPage","searchQuery","setSearchQuery","selectedProf","setSelectedProf","sortBy","setSortBy","filteredUsers","toLowerCase","count","usersCrop","pageNumber","startIndex","splice","paginate","placeholder","newArray","pageIndex","Users","params","edit","CheckBoxField","LoginForm","password","stayOn","isCapitalSymbol","isContainDigit","min","RegisterForm","licence","Login","formType","setFormType","toggleFormType","Main","NavBar","aria-current","App","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5d7f7cd0.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","export function validator(data, config) {\n    const errors = {};\n    function validate(validateMethod, data, config) {\n        let statusValidate;\n        switch (validateMethod) {\n            case \"isRequired\": {\n                if (typeof data === \"boolean\") {\n                    statusValidate = !data;\n                } else {\n                    statusValidate = data.trim() === \"\";\n                }\n                break;\n            }\n            case \"isEmail\": {\n                const emailRegExp = /^\\S+@\\S+\\.\\S+$/g;\n                statusValidate = !emailRegExp.test(data);\n                break;\n            }\n            case \"isCapitalSymbol\": {\n                const capitalRegExp = /[A-Z]+/g;\n                statusValidate = !capitalRegExp.test(data);\n                break;\n            }\n            case \"isContainDigit\": {\n                const digitRegExp = /\\d+/g;\n                statusValidate = !digitRegExp.test(data);\n                break;\n            }\n            case \"min\": {\n                statusValidate = data.length < config.value;\n                break;\n            }\n            default:\n                break;\n        }\n        if (statusValidate) return config.message;\n    }\n    for (const fieldName in data) {\n        for (const validateMethod in config[fieldName]) {\n            const error = validate(\n                validateMethod,\n                data[fieldName],\n                config[fieldName][validateMethod]\n            );\n            if (error && !errors[fieldName]) {\n                errors[fieldName] = error;\n            }\n        }\n    }\n    return errors;\n}\n","export const professionsObject = {\n    doctor: { _id: \"67rdca3eeb7f6fgeed471818\", name: \"Доктор\" },\n    waiter: { _id: \"67rdca3eeb7f6fgeed471820\", name: \"Официант\" },\n    physics: { _id: \"67rdca3eeb7f6fgeed471814\", name: \"Физик\" },\n    engineer: { _id: \"67rdca3eeb7f6fgeed471822\", name: \"Инженер\" },\n    actor: { _id: \"67rdca3eeb7f6fgeed471824\", name: \"Актер\" },\n    cook: { _id: \"67rdca3eeb7f6fgeed471829\", name: \"Повар\" }\n};\nexport const professions = [\n    { _id: \"67rdca3eeb7f6fgeed471818\", name: \"Доктор\" },\n    { _id: \"67rdca3eeb7f6fgeed471820\", name: \"Официант\" },\n    { _id: \"67rdca3eeb7f6fgeed471814\", name: \"Физик\" },\n    { _id: \"67rdca3eeb7f6fgeed471822\", name: \"Инженер\" },\n    { _id: \"67rdca3eeb7f6fgeed471824\", name: \"Актер\" },\n    { _id: \"67rdca3eeb7f6fgeed471829\", name: \"Повар\" }\n];\nconst fetchAll = () =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(professionsObject);\n        }, 2000);\n    });\n\nexport default {\n    fetchAll\n};\n","import { professionsObject as professions } from \"./professions.api\";\nconst qualities = {\n    tedious: {\n        _id: \"67rdca3eeb7f6fgeed471198\",\n        name: \"Нудила\",\n        color: \"primary\"\n    },\n    strange: {\n        _id: \"67rdca3eeb7f6fgeed471100\",\n        name: \"Странный\",\n        color: \"secondary\"\n    },\n    buller: {\n        _id: \"67rdca3eeb7f6fgeed4711012\",\n        name: \"Троль\",\n        color: \"success\"\n    },\n    alcoholic: {\n        _id: \"67rdca3eeb7f6fgeed471101\",\n        name: \"Алкоголик\",\n        color: \"danger\"\n    },\n    handsome: {\n        _id: \"67rdca3eeb7f6fgeed471102\",\n        name: \"Красавчик\",\n        color: \"info\"\n    },\n    uncertain: {\n        _id: \"67rdca3eeb7f6fgeed471103\",\n        name: \"Неуверенный\",\n        color: \"dark\"\n    }\n};\n\nconst users = [\n    {\n        _id: \"67rdca3eeb7f6fgeed471815\",\n        name: \"Джон Дориан\",\n        email: \"Jony7351@tw.com\",\n        sex: \"male\",\n        profession: professions.doctor,\n        qualities: [qualities.tedious, qualities.uncertain, qualities.strange],\n        completedMeetings: 36,\n        rate: 2.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471816\",\n        name: \"Кокс\",\n        email: \"white4571@twipet.com\",\n        sex: \"male\",\n        profession: professions.doctor,\n        qualities: [qualities.buller, qualities.handsome, qualities.alcoholic],\n        completedMeetings: 15,\n        rate: 2.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471817\",\n        name: \"Боб Келсо\",\n        email: \"bob007@tw.com\",\n        sex: \"male\",\n        profession: professions.doctor,\n        qualities: [qualities.buller],\n        completedMeetings: 247,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471818\",\n        name: \"Рэйчел Грин\",\n        email: \"green7311@fam.biz\",\n        sex: \"female\",\n        profession: professions.waiter,\n        qualities: [qualities.uncertain],\n        completedMeetings: 148,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471819\",\n        name: \"Шелдон Купер\",\n        email: \"mindgames6878@phis.tech\",\n        sex: \"male\",\n        profession: professions.physics,\n        qualities: [qualities.strange, qualities.tedious],\n        completedMeetings: 37,\n        rate: 4.6,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471820\",\n        name: \"Леонард Хофстедтер\",\n        email: \"mindes000@phis.tech\",\n        sex: \"male\",\n        profession: professions.physics,\n        qualities: [qualities.strange, qualities.uncertain],\n        completedMeetings: 147,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471821\",\n        name: \"Говард Воловиц\",\n        email: \"gov1903@phis.tech\",\n        sex: \"male\",\n        profession: professions.engineer,\n        qualities: [qualities.strange, qualities.tedious],\n        completedMeetings: 72,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471822\",\n        name: \"Никола Тесла\",\n        email: \"electro@underground.tech\",\n        sex: \"male\",\n        profession: professions.engineer,\n        qualities: [qualities.handsome],\n        completedMeetings: 72,\n        rate: 5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471823\",\n        name: \"Моника Геллер\",\n        email: \"mono@super.com\",\n        sex: \"female\",\n        profession: professions.cook,\n        qualities: [qualities.strange, qualities.uncertain],\n        completedMeetings: 17,\n        rate: 4.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471824\",\n        name: \"Рататуй\",\n        email: \"ratatatata@underground.com\",\n        sex: \"male\",\n        profession: professions.cook,\n        qualities: [qualities.handsome, qualities.buller],\n        completedMeetings: 17,\n        rate: 4.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed47181f\",\n        name: \"Джоуи Триббиани\",\n        email: \"joe@trib.com\",\n        sex: \"male\",\n        profession: professions.actor,\n        qualities: [qualities.uncertain, qualities.strange],\n        completedMeetings: 434,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed47181r\",\n        name: \"Брэд Питт\",\n        email: \"superstar@star.com\",\n        sex: \"male\",\n        profession: professions.actor,\n        qualities: [qualities.handsome],\n        completedMeetings: 434,\n        rate: 5,\n        bookmark: false\n    }\n];\nif (!localStorage.getItem(\"users\")) {\n    localStorage.setItem(\"users\", JSON.stringify(users));\n}\n\nconst fetchAll = () =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(JSON.parse(localStorage.getItem(\"users\")));\n        }, 2000);\n    });\nconst update = (id, data) =>\n    new Promise((resolve) => {\n        const users = JSON.parse(localStorage.getItem(\"users\"));\n        const userIndex = users.findIndex((u) => u._id === id);\n        users[userIndex] = { ...users[userIndex], ...data };\n        localStorage.setItem(\"users\", JSON.stringify(users));\n        resolve(users[userIndex]);\n    });\n\nconst getById = (id) =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(\n                JSON.parse(localStorage.getItem(\"users\")).find(\n                    (user) => user._id === id\n                )\n            );\n        }, 1000);\n    });\nexport default {\n    fetchAll,\n    getById,\n    update\n};\n","const qualities = {\n    tedious: {\n        _id: \"67rdca3eeb7f6fgeed471198\",\n        name: \"Нудила\",\n        color: \"primary\"\n    },\n    strange: {\n        _id: \"67rdca3eeb7f6fgeed471100\",\n        name: \"Странный\",\n        color: \"secondary\"\n    },\n    buller: {\n        _id: \"67rdca3eeb7f6fgeed4711012\",\n        name: \"Троль\",\n        color: \"success\"\n    },\n    alcoholic: {\n        _id: \"67rdca3eeb7f6fgeed471101\",\n        name: \"Алкоголик\",\n        color: \"danger\"\n    },\n    handsome: {\n        _id: \"67rdca3eeb7f6fgeed471102\",\n        name: \"Красавчик\",\n        color: \"info\"\n    },\n    uncertain: {\n        _id: \"67rdca3eeb7f6fgeed471103\",\n        name: \"Неуверенный\",\n        color: \"dark\"\n    }\n};\nconst fetchAll = () =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(qualities);\n        }, 2000);\n    });\n\nexport default {\n    fetchAll\n};\n","const comments = [\n    {\n        _id: \"67rdca3eeb7f6fg\",\n        userId: \"67rdca3eeb7f6fgeed471815\",\n        pageId: \"67rdca3eeb7f6fgeed471815\",\n        content: \"Lorem ipsum dolor\",\n        created_at: \"1633576399367\"\n    },\n    {\n        _id: \"67rdca3eeb7f6fgdasd\",\n        pageId: \"67rdca3eeb7f6fgeed471815\",\n        userId: \"67rdca3eeb7f6fgeed471815\",\n        content: \"Lorem ipsum dolor and etc\",\n        created_at: \"1633573058520\"\n    },\n    {\n        _id: \"67rdca3eeb7f6fgdaasd\",\n        pageId: \"67rdca3eeb7f6fgeed471817\",\n        userId: \"67rdca3eeb7f6fgeed471815\",\n        content: \"Lorem ipsum dolor and etc\",\n        created_at: \"1633573058520\"\n    }\n];\nif (!localStorage.getItem(\"comments\")) {\n    localStorage.setItem(\"comments\", JSON.stringify(comments));\n}\nconst fetchAll = () =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(comments);\n        }, 200);\n    });\n\nconst fetchCommentsForUser = (userId) =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(\n                JSON.parse(localStorage.getItem(\"comments\")).filter(\n                    (c) => c.pageId === userId\n                )\n            );\n        }, 200);\n    });\nconst add = (data) =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            const comments = JSON.parse(localStorage.getItem(\"comments\"));\n            const newComment = {\n                ...data,\n                created_at: Date.now(),\n                _id: Math.random().toString(36).substr(2, 9)\n            };\n            comments.push(newComment);\n            localStorage.setItem(\"comments\", JSON.stringify(comments));\n            resolve(newComment);\n        }, 200);\n    });\n\nconst remove = (id) =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            const comments = JSON.parse(localStorage.getItem(\"comments\"));\n            const newComments = comments.filter((x) => x._id !== id);\n            console.log(id);\n            console.log(newComments);\n            localStorage.setItem(\"comments\", JSON.stringify(newComments));\n            resolve(id);\n        }, 200);\n    });\nexport default {\n    fetchAll,\n    fetchCommentsForUser,\n    add,\n    remove\n};\n","import users from \"./fake.api/user.api\";\nimport professions from \"./fake.api/professions.api\";\nimport qualities from \"./fake.api/qualities.api\";\nimport comments from \"./fake.api/comments.api\";\nconst API = {\n    users,\n    professions,\n    qualities,\n    comments\n};\nexport default API;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TextField = ({ label, type, name, value, onChange, error }) => {\n    const [showPassword, setShowPassword] = useState(false);\n\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    const getInputClasses = () => {\n        return \"form-control\" + (error ? \" is-invalid\" : \"\");\n    };\n    const toggleShowPassword = () => {\n        setShowPassword((prevState) => !prevState);\n    };\n    return (\n        <div className=\"mb-4\">\n            <label htmlFor={name}>{label}</label>\n            <div className=\"input-group has-validation\">\n                <input\n                    type={showPassword ? \"text\" : type}\n                    id={name}\n                    name={name}\n                    value={value}\n                    onChange={handleChange}\n                    className={getInputClasses()}\n                />\n                {type === \"password\" && (\n                    <button\n                        className=\"btn btn-outline-secondary\"\n                        type=\"button\"\n                        onClick={toggleShowPassword}\n                    >\n                        <i\n                            className={\n                                \"bi bi-eye\" + (showPassword ? \"-slash\" : \"\")\n                            }\n                        ></i>\n                    </button>\n                )}\n                {error && <div className=\"invalid-feedback\">{error}</div>}\n            </div>\n        </div>\n    );\n};\nTextField.defaultProps = {\n    type: \"text\"\n};\nTextField.propTypes = {\n    label: PropTypes.string,\n    type: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    error: PropTypes.string\n};\n\nexport default TextField;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst SelectField = ({\n    label,\n    value,\n    onChange,\n    defaultOption,\n    options,\n    error,\n    name\n}) => {\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    const getInputClasses = () => {\n        return \"form-select\" + (error ? \" is-invalid\" : \"\");\n    };\n\n    const optionsArray =\n        !Array.isArray(options) && typeof options === \"object\"\n            ? Object.values(options)\n            : options;\n\n    return (\n        <div className=\"mb-4\">\n            <label htmlFor={name} className=\"form-label\">\n                {label}\n            </label>\n            <select\n                className={getInputClasses()}\n                id={name}\n                name={name}\n                value={value}\n                onChange={handleChange}\n            >\n                <option disabled value=\"\">\n                    {defaultOption}\n                </option>\n                {optionsArray.length > 0 &&\n                    optionsArray.map((option) => (\n                        <option value={option.value} key={option.value}>\n                            {option.label}\n                        </option>\n                    ))}\n            </select>\n            {error && <div className=\"invalid-feedback\">{error}</div>}\n        </div>\n    );\n};\n\nSelectField.propTypes = {\n    defaultOption: PropTypes.string,\n    label: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    error: PropTypes.string,\n    options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    name: PropTypes.string\n};\n\nexport default SelectField;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst RadioField = ({ options, name, onChange, value, label }) => {\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    return (\n        <div className=\"mb-4\">\n            <label className=\"form-label\">{label}</label>\n            <div>\n                {options.map((option) => (\n                    <div\n                        key={option.name + \"_\" + option.value}\n                        className=\"form-check form-check-inline\"\n                    >\n                        <input\n                            className=\"form-check-input\"\n                            type=\"radio\"\n                            name={name}\n                            id={option.name + \"_\" + option.value}\n                            checked={option.value === value}\n                            value={option.value}\n                            onChange={handleChange}\n                        />\n                        <label\n                            className=\"form-check-label\"\n                            htmlFor={option.name + \"_\" + option.value}\n                        >\n                            {option.name}\n                        </label>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nRadioField.propTypes = {\n    options: PropTypes.array,\n    name: PropTypes.string,\n    onChange: PropTypes.func,\n    value: PropTypes.string,\n    label: PropTypes.string\n};\n\nexport default RadioField;\n","import React from \"react\";\nimport Select from \"react-select\";\nimport PropTypes from \"prop-types\";\n\nconst MultiSelectField = ({ options, onChange, name, label, defaultValue }) => {\n    const optionsArray =\n        !Array.isArray(options) && typeof options === \"object\"\n            ? Object.values(options)\n            : options;\n\n    const handleChange = (value) => {\n        onChange({ name: name, value });\n    };\n    return (\n        <div className=\"mb-4\">\n            <label className=\"form-label\">{label}</label>\n            <Select\n                isMulti\n                closeMenuOnSelect={false}\n                defaultValue={defaultValue}\n                options={optionsArray}\n                className=\"basic-multi-select\"\n                classNamePrefix=\"select\"\n                onChange={handleChange}\n                name={name}\n            />\n        </div>\n    );\n};\nMultiSelectField.propTypes = {\n    options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    onChange: PropTypes.func,\n    name: PropTypes.string,\n    label: PropTypes.string,\n    defaultValue: PropTypes.array\n};\n\nexport default MultiSelectField;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nconst BackHistoryButton = () => {\n    const history = useHistory();\n    return (\n        <button className=\"btn btn-primary\" onClick={() => history.goBack()}>\n            <i className=\"bi bi-caret-left\"></i>\n            Назад\n        </button>\n    );\n};\n\nexport default BackHistoryButton;\n","import EditUserPage from \"./editUserPage\";\nexport default EditUserPage;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { validator } from \"../../../utils/validator\";\nimport api from \"../../../api\";\nimport TextField from \"../../common/form/textField\";\nimport SelectField from \"../../common/form/selectField\";\nimport RadioField from \"../../common/form/radioField\";\nimport MultiSelectField from \"../../common/form/multiSelectField\";\nimport BackHistoryButton from \"../../common/backButton\";\n\nconst EditUserPage = () => {\n    const { userId } = useParams();\n    const history = useHistory();\n    const [isLoading, setIsLoading] = useState(false);\n    const [data, setData] = useState({\n        name: \"\",\n        email: \"\",\n        profession: \"\",\n        sex: \"male\",\n        qualities: []\n    });\n    const [professions, setProfession] = useState([]);\n    const [qualities, setQualities] = useState([]);\n    const [errors, setErrors] = useState({});\n    const getProfessionById = (id) => {\n        for (const prof of professions) {\n            if (prof.value === id) {\n                return { _id: prof.value, name: prof.label };\n            }\n        }\n    };\n    const getQualities = (elements) => {\n        const qualitiesArray = [];\n        for (const elem of elements) {\n            for (const quality in qualities) {\n                if (elem.value === qualities[quality].value) {\n                    qualitiesArray.push({\n                        _id: qualities[quality].value,\n                        name: qualities[quality].label,\n                        color: qualities[quality].color\n                    });\n                }\n            }\n        }\n        return qualitiesArray;\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        const { profession, qualities } = data;\n        api.users\n            .update(userId, {\n                ...data,\n                profession: getProfessionById(profession),\n                qualities: getQualities(qualities)\n            })\n            .then((data) => history.push(`/users/${data._id}`));\n        console.log({\n            ...data,\n            profession: getProfessionById(profession),\n            qualities: getQualities(qualities)\n        });\n    };\n    const transformData = (data) => {\n        return data.map((qual) => ({ label: qual.name, value: qual._id }));\n    };\n    useEffect(() => {\n        setIsLoading(true);\n        api.users.getById(userId).then(({ profession, qualities, ...data }) =>\n            setData((prevState) => ({\n                ...prevState,\n                ...data,\n                qualities: transformData(qualities),\n                profession: profession._id\n            }))\n        );\n        api.professions.fetchAll().then((data) => {\n            const professionsList = Object.keys(data).map((professionName) => ({\n                label: data[professionName].name,\n                value: data[professionName]._id\n            }));\n            setProfession(professionsList);\n        });\n        api.qualities.fetchAll().then((data) => {\n            const qualitiesList = Object.keys(data).map((optionName) => ({\n                value: data[optionName]._id,\n                label: data[optionName].name,\n                color: data[optionName].color\n            }));\n            setQualities(qualitiesList);\n        });\n    }, []);\n    useEffect(() => {\n        if (data._id) setIsLoading(false);\n    }, [data]);\n\n    const validatorConfig = {\n        email: {\n            isRequired: {\n                message: \"Электронная почта обязательна для заполнения\"\n            },\n            isEmail: {\n                message: \"Email введен некорректно\"\n            }\n        },\n        name: {\n            isRequired: {\n                message: \"Введите ваше имя\"\n            }\n        }\n    };\n    useEffect(() => {\n        validate();\n    }, [data]);\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const validate = () => {\n        const errors = validator(data, validatorConfig);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const isValid = Object.keys(errors).length === 0;\n    return (\n        <div className=\"container mt-5\">\n            <BackHistoryButton />\n            <div className=\"row\">\n                <div className=\"col-md-6 offset-md-3 shadow p-4\">\n                    {!isLoading && Object.keys(professions).length > 0 ? (\n                        <form onSubmit={handleSubmit}>\n                            <TextField\n                                label=\"Имя\"\n                                name=\"name\"\n                                value={data.name}\n                                onChange={handleChange}\n                                error={errors.name}\n                            />\n                            <TextField\n                                label=\"Электронная почта\"\n                                name=\"email\"\n                                value={data.email}\n                                onChange={handleChange}\n                                error={errors.email}\n                            />\n                            <SelectField\n                                label=\"Выбери свою профессию\"\n                                defaultOption=\"Choose...\"\n                                options={professions}\n                                name=\"profession\"\n                                onChange={handleChange}\n                                value={data.profession}\n                                error={errors.profession}\n                            />\n                            <RadioField\n                                options={[\n                                    { name: \"Male\", value: \"male\" },\n                                    { name: \"Female\", value: \"female\" },\n                                    { name: \"Other\", value: \"other\" }\n                                ]}\n                                value={data.sex}\n                                name=\"sex\"\n                                onChange={handleChange}\n                                label=\"Выберите ваш пол\"\n                            />\n                            <MultiSelectField\n                                defaultValue={data.qualities}\n                                options={qualities}\n                                onChange={handleChange}\n                                name=\"qualities\"\n                                label=\"Выберите ваши качества\"\n                            />\n                            <button\n                                type=\"submit\"\n                                disabled={!isValid}\n                                className=\"btn btn-primary w-100 mx-auto\"\n                            >\n                                Обновить\n                            </button>\n                        </form>\n                    ) : (\n                        \"Loading...\"\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default EditUserPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useHistory } from \"react-router-dom\";\nconst UserCard = ({ user }) => {\n    const history = useHistory();\n    const handleClick = () => {\n        history.push(history.location.pathname + \"/edit\");\n    };\n    return (\n        <div className=\"card mb-3\">\n            <div className=\"card-body\">\n                <button\n                    className=\"position-absolute top-0 end-0 btn btn-light btn-sm\"\n                    onClick={handleClick}\n                >\n                    <i className=\"bi bi-gear\"></i>\n                </button>\n                <div className=\"d-flex flex-column align-items-center text-center position-relative\">\n                    <img\n                        src={`https://avatars.dicebear.com/api/avataaars/${(\n                            Math.random() + 1\n                        )\n                            .toString(36)\n                            .substring(7)}.svg`}\n                        className=\"rounded-circle\"\n                        width=\"150\"\n                    />\n                    <div className=\"mt-3\">\n                        <h4>{user.name}</h4>\n                        <p className=\"text-secondary mb-1\">\n                            {user.profession.name}\n                        </p>\n                        <div className=\"text-muted\">\n                            <i\n                                className=\"bi bi-caret-down-fill text-primary\"\n                                role=\"button\"\n                            ></i>\n                            <i\n                                className=\"bi bi-caret-up text-secondary\"\n                                role=\"button\"\n                            ></i>\n                            <span className=\"ms-2\">{user.rate}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\nUserCard.propTypes = {\n    user: PropTypes.object\n};\n\nexport default UserCard;\n","import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport config from \"../config.json\";\n\naxios.defaults.baseURL = config.apiEndpoint;\n\naxios.interceptors.response.use(\n    (res) => res,\n    function (error) {\n        const expectedErrors =\n            error.response &&\n            error.response.status >= 400 &&\n            error.response.status < 500;\n\n        if (!expectedErrors) {\n            console.log(error);\n            toast.error(\"Something was wrong. Try it later\");\n        }\n        return Promise.reject(error);\n    }\n);\nconst httpService = {\n    get: axios.get,\n    post: axios.post,\n    put: axios.put,\n    delete: axios.delete\n};\nexport default httpService;\n","import httpService from \"./http.service\";\nconst qualityEndpoint = \"quality/\";\n\nconst qualityService = {\n    get: async (id) => {\n        const { data } = await httpService.get(qualityEndpoint + id);\n        return data;\n    },\n    fetchAll: async () => {\n        const { data } = await httpService.get(qualityEndpoint);\n        return data;\n    }\n};\nexport default qualityService;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport qualityService from \"../services/quality.service\";\nimport PropTypes from \"prop-types\";\nconst QualitiesContex = React.createContext();\n\nexport const useQualities = () => {\n    return useContext(QualitiesContex);\n};\n\nexport const QualitiesProvider = ({ children }) => {\n    const [qualities, setQualities] = useState([]);\n    const [error, setError] = useState(null);\n    const [isLoading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const getQualities = async () => {\n            try {\n                const { content } = await qualityService.fetchAll();\n                setQualities(content);\n                setLoading(false);\n            } catch (error) {\n                errorCatcher(error);\n            }\n        };\n        getQualities();\n    }, []);\n\n    const getQuality = (id) => {\n        return qualities.find((q) => q._id === id);\n    };\n\n    function errorCatcher(error) {\n        const { message } = error.response.data;\n        setError(message);\n    }\n    useEffect(() => {\n        if (error !== null) {\n            toast(error);\n            setError(null);\n        }\n    }, [error]);\n\n    return (\n        <QualitiesContex.Provider\n            value={{\n                qualities,\n                getQuality\n            }}\n        >\n            {!isLoading ? children : <h1>Qualities Loading ....</h1>}\n        </QualitiesContex.Provider>\n    );\n};\nQualitiesProvider.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst Quality = ({ color, name, _id }) => {\n    return (\n        <span className={\"badge m-1 bg-\" + color}>\n            {name}\n        </span>\n    );\n};\nQuality.propTypes = {\n    color: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    _id: PropTypes.string.isRequired\n};\n\nexport default Quality;\n","import Qualities from \"./qualitiesList\";\nexport default Qualities;\n","import React from \"react\";\nimport { useQualities } from \"../../../hooks/useQualities\";\nimport PropTypes from \"prop-types\";\nimport Quality from \"./quality\";\n\nconst QualitiesList = ({ qualities }) => {\n    const { isLoading, getQuality } = useQualities();\n    const qualitiListRender = [];\n    qualities.forEach((item) => {\n        qualitiListRender.push(getQuality(item));\n    });\n    if (!isLoading) {\n        return (\n            <>\n                {qualitiListRender.map((qual) => (\n                    <Quality key={qual._id} {...qual} />\n                ))}\n            </>\n        );\n    } else return \"Loading...\";\n};\nQualitiesList.propTypes = {\n    qualities: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\nexport default QualitiesList;\n","import React from \"react\";\nimport Qualities from \"./qualities\";\nimport PropTypes from \"prop-types\";\n\nconst QualitiesCard = ({ data }) => {\n    return (\n        <div className=\"card mb-3\">\n            <div className=\"card-body d-flex flex-column justify-content-center text-center\">\n                <h5 className=\"card-title\">\n                    <span>Qualities</span>\n                </h5>\n                <p className=\"card-text\">\n                    <Qualities qualities={data} />\n                </p>\n            </div>\n        </div>\n    );\n};\nQualitiesCard.propTypes = {\n    data: PropTypes.array\n};\n\nexport default QualitiesCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst MeetingsCard = ({ value }) => {\n    return (\n        <div className=\"card mb-3\">\n            <div className=\"card-body d-flex flex-column justify-content-center text-center\">\n                <h5 className=\"card-title\">\n                    <span>Completed meetings</span>\n                </h5>\n\n                <h1 className=\"display-1\">{value}</h1>\n            </div>\n        </div>\n    );\n};\nMeetingsCard.propTypes = {\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n};\n\nexport default MeetingsCard;\n","export function displayDate(data) {\n    const date = new Date(parseInt(data));\n    const dateNow = new Date();\n    const yearDif = dateNow.getFullYear() - date.getFullYear();\n    if (yearDif === 0) {\n        const dayDif = dateNow.getDate() - date.getDate();\n        if (dayDif === 0) {\n            const hourDif = dateNow.getHours() - date.getHours();\n            if (hourDif === 0) {\n                const minutesDif = dateNow.getMinutes() - date.getMinutes();\n\n                if (minutesDif >= 0 && minutesDif < 5) return \"1 минуту назад\";\n                if (minutesDif >= 5 && minutesDif < 10) return \"5 минут назад\";\n                if (minutesDif >= 10 && minutesDif < 30) {\n                    return \"10 минут назад\";\n                }\n                return \"30 минут назад\";\n            }\n            return `${date.getHours()}:${date.getMinutes()}`;\n        }\n\n        return date.toLocaleString(\"default\", { month: \"long\", day: \"numeric\" });\n    }\n    return (\n        date.getFullYear() + \".\" + (date.getMonth() + 1) + \"_\" + date.getDate()\n    );\n}\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { displayDate } from \"../../../utils/displayDate\";\nimport API from \"../../../api\";\nconst Comment = ({\n    content,\n    created_at: created,\n    _id: id,\n    userId,\n    onRemove\n}) => {\n    const [user, setUser] = useState();\n    const [isLoading, setIsLoading] = useState(false);\n    useEffect(() => {\n        setIsLoading(true);\n        API.users.getById(userId).then((data) => {\n            setUser(data);\n            setIsLoading(false);\n        });\n    }, []);\n\n    return (\n        <div className=\"bg-light card-body  mb-3\">\n            <div className=\"row\">\n                {isLoading ? (\n                    \"Loading ...\"\n                ) : (\n                    <div className=\"col\">\n                        <div className=\"d-flex flex-start \">\n                            <img\n                                src={`https://avatars.dicebear.com/api/avataaars/${(\n                                    Math.random() + 1\n                                )\n                                    .toString(36)\n                                    .substring(7)}.svg`}\n                                className=\"rounded-circle shadow-1-strong me-3\"\n                                alt=\"avatar\"\n                                width=\"65\"\n                                height=\"65\"\n                            />\n                            <div className=\"flex-grow-1 flex-shrink-1\">\n                                <div className=\"mb-4\">\n                                    <div className=\"d-flex justify-content-between align-items-center\">\n                                        <p className=\"mb-1 \">\n                                            {user && user.name}{\" \"}\n                                            <span className=\"small\">\n                                                - {displayDate(created)}\n                                            </span>\n                                        </p>\n                                        <button\n                                            className=\"btn btn-sm text-primary d-flex align-items-center\"\n                                            onClick={() => onRemove(id)}\n                                        >\n                                            <i className=\"bi bi-x-lg\"></i>\n                                        </button>\n                                    </div>\n                                    <p className=\"small mb-0\">{content}</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\nComment.propTypes = {\n    content: PropTypes.string,\n    edited_at: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    created_at: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    userId: PropTypes.string,\n    onRemove: PropTypes.func,\n    _id: PropTypes.string\n};\n\nexport default Comment;\n","import React from \"react\";\nimport Comment from \"./comment\";\nimport PropTypes from \"prop-types\";\n\nconst CommentsList = ({ comments, onRemove }) => {\n    return comments.map((comment) => (\n        <Comment key={comment._id} {...comment} onRemove={onRemove} />\n    ));\n};\nCommentsList.propTypes = {\n    comment: PropTypes.array,\n    onRemove: PropTypes.func\n};\n\nexport default CommentsList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TextAreaField = ({ label, name, value, onChange, error }) => {\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    const getInputClasses = () => {\n        return \"form-control\" + (error ? \" is-invalid\" : \"\");\n    };\n\n    return (\n        <div className=\"mb-4\">\n            <label htmlFor={name}> {label}</label>\n            <div className=\"input-group has-validation\">\n                <textarea\n                    id={name}\n                    name={name}\n                    value={value}\n                    onChange={handleChange}\n                    className={getInputClasses()}\n                />\n\n                {error && <div className=\"invalid-feedback \">{error}</div>}\n            </div>\n        </div>\n    );\n};\nTextAreaField.defaultProps = {\n    type: \"text\"\n};\nTextAreaField.propTypes = {\n    label: PropTypes.string,\n    type: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    error: PropTypes.string\n};\n\nexport default TextAreaField;\n","import React, { useEffect, useState } from \"react\";\nimport API from \"../../../api\";\nimport SelectField from \"../form/selectField\";\nimport TextAreaField from \"../form/textAreaField\";\nimport { validator } from \"../../../utils/validator\";\nimport PropTypes from \"prop-types\";\nconst initialData = { userId: \"\", content: \"\" };\n\nconst AddCommentForm = ({ onSubmit }) => {\n    const [data, setData] = useState(initialData);\n    const [users, setUsers] = useState({});\n    const [errors, setErrors] = useState({});\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const validatorConfig = {\n        userId: {\n            isRequired: {\n                message: \"Выберите от чьего имени вы хотите отправить сообщение\"\n            }\n        },\n        content: {\n            isRequired: {\n                message: \"Сообщение не может быть пустым\"\n            }\n        }\n    };\n\n    const validate = () => {\n        const errors = validator(data, validatorConfig);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    useEffect(() => {\n        API.users.fetchAll().then(setUsers);\n    }, []);\n    const clearForm = () => {\n        setData(initialData);\n        setErrors({});\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        onSubmit(data);\n        clearForm();\n    };\n    const arrayOfUsers =\n        users &&\n        Object.keys(users).map((userId) => ({\n            label: users[userId].name,\n            value: users[userId]._id\n        }));\n    return (\n        <div>\n            <h2>New comment</h2>\n            <form onSubmit={handleSubmit}>\n                <SelectField\n                    onChange={handleChange}\n                    options={arrayOfUsers}\n                    name=\"userId\"\n                    value={data.userId}\n                    defaultOption=\"Выберите пользователя\"\n                    error={errors.userId}\n                />\n                <TextAreaField\n                    value={data.content}\n                    onChange={handleChange}\n                    name=\"content\"\n                    label=\"Сообщение\"\n                    error={errors.content}\n                />\n                <div className=\"d-flex justify-content-end\">\n                    <button className=\"btn btn-primary\">Опубликовать</button>\n                </div>\n            </form>\n        </div>\n    );\n};\nAddCommentForm.propTypes = {\n    onSubmit: PropTypes.func\n};\n\nexport default AddCommentForm;\n","import CommentsList from \"./commentsList\";\nimport AddCommentForm from \"./addCommentForm\";\nexport default CommentsList;\nexport { AddCommentForm };\n","import { orderBy } from \"lodash\";\nimport React, { useEffect, useState } from \"react\";\nimport api from \"../../api\";\nimport { useParams } from \"react-router-dom\";\nimport CommentsList, { AddCommentForm } from \"../common/comments\";\n\nconst Comments = () => {\n    const { userId } = useParams();\n    const [comments, setComments] = useState([]);\n    useEffect(() => {\n        api.comments\n            .fetchCommentsForUser(userId)\n            .then((data) => setComments(data));\n    }, []);\n    const handleSubmit = (data) => {\n        api.comments\n            .add({ ...data, pageId: userId })\n            .then((data) => setComments([...comments, data]));\n    };\n    const handleRemoveComment = (id) => {\n        api.comments.remove(id).then((id) => {\n            setComments(comments.filter((x) => x._id !== id));\n        });\n    };\n    const sortedComments = orderBy(comments, [\"created_at\"], [\"desc\"]);\n    return (\n        <>\n            <div className=\"card mb-2\">\n                {\" \"}\n                <div className=\"card-body \">\n                    <AddCommentForm onSubmit={handleSubmit} />\n                </div>\n            </div>\n            {sortedComments.length > 0 && (\n                <div className=\"card mb-3\">\n                    <div className=\"card-body \">\n                        <h2>Comments</h2>\n                        <hr />\n                        <CommentsList\n                            comments={sortedComments}\n                            onRemove={handleRemoveComment}\n                        />\n                    </div>\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default Comments;\n","import UserPage from \"./userPage\";\nexport default UserPage;\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport api from \"../../../api\";\nimport UserCard from \"../../ui/userCard\";\nimport QualitiesCard from \"../../ui/qualitiesCard\";\nimport MeetingsCard from \"../../ui/meetingsCard\";\nimport Comments from \"../../ui/comments\";\n\nconst UserPage = ({ userId }) => {\n    const [user, setUser] = useState();\n    useEffect(() => {\n        api.users.getById(userId).then((data) => setUser(data));\n    }, []);\n    if (user) {\n        return (\n            <div className=\"container\">\n                <div className=\"row gutters-sm\">\n                    <div className=\"col-md-4 mb-3\">\n                        <UserCard user={user} />\n                        <QualitiesCard data={user.qualities} />\n                        <MeetingsCard value={user.completedMeetings} />\n                    </div>\n                    <div className=\"col-md-8\">\n                        <Comments />\n                    </div>\n                </div>\n            </div>\n        );\n    } else {\n        return <h1>Loading</h1>;\n    }\n};\n\nUserPage.propTypes = {\n    userId: PropTypes.string.isRequired\n};\n\nexport default UserPage;\n","import React from \"react\";\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\n\nconst Pagination = ({ itemsCount, pageSize, onPageChange, currentPage }) => {\n    const pageCount = Math.ceil(itemsCount / pageSize);\n    if (pageCount === 1) return null;\n    const pages = _.range(1, pageCount + 1);\n    return (\n        <nav>\n            <ul className=\"pagination\">\n                {pages.map((page) => (\n                    <li\n                        className={\n                            \"page-item\" +\n                            (page === currentPage ? \" active\" : \"\")\n                        }\n                        key={\"page_\" + page}\n                    >\n                        <button\n                            className=\"page-link\"\n                            onClick={() => onPageChange(page)}\n                        >\n                            {page}\n                        </button>\n                    </li>\n                ))}\n            </ul>\n        </nav>\n    );\n};\nPagination.propTypes = {\n    itemsCount: PropTypes.number.isRequired,\n    pageSize: PropTypes.number.isRequired,\n    onPageChange: PropTypes.func.isRequired,\n    currentPage: PropTypes.number.isRequired\n};\n\nexport default Pagination;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst GroupList = ({\n    items,\n    valueProperty,\n    contentProperty,\n    onItemSelect,\n    selectedItem\n}) => {\n    if (!Array.isArray(items)) {\n        return (\n            <ul className=\"list-group\">\n                {Object.keys(items).map((item) => (\n                    <li\n                        key={items[item][valueProperty]}\n                        className={\n                            \"list-group-item\" +\n                            (items[item] === selectedItem ? \" active\" : \"\")\n                        }\n                        onClick={() => onItemSelect(items[item])}\n                        role=\"button\"\n                    >\n                        {items[item][contentProperty]}\n                    </li>\n                ))}\n            </ul>\n        );\n    }\n    return (\n        <ul className=\"list-group\">\n            {items.map((item) => (\n                <li\n                    key={item[valueProperty]}\n                    className={\n                        \"list-group-item\" +\n                        (item === selectedItem ? \" active\" : \"\")\n                    }\n                    onClick={() => onItemSelect(item)}\n                    role=\"button\"\n                >\n                    {item[contentProperty]}\n                </li>\n            ))}\n        </ul>\n    );\n};\nGroupList.defaultProps = {\n    valueProperty: \"_id\",\n    contentProperty: \"name\"\n};\nGroupList.propTypes = {\n    items: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    valueProperty: PropTypes.string.isRequired,\n    contentProperty: PropTypes.string.isRequired,\n    onItemSelect: PropTypes.func,\n    selectedItem: PropTypes.object\n};\n\nexport default GroupList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst SearchStatus = ({ length }) => {\n    const renderPhrase = (number) => {\n        const lastOne = Number(number.toString().slice(-1));\n        if (number > 4 && number < 15) {\n            return \"человек тусанет\";\n        }\n        if (lastOne === 1) return \"человек тусанет\";\n        if ([2, 3, 4].indexOf(lastOne) >= 0) return \"человека тусанут\";\n        return \"человек тусанет\";\n    };\n    return (\n        <h2>\n            <span\n                className={\"badge \" + (length > 0 ? \"bg-primary\" : \"bg-danger\")}\n            >\n                {length > 0\n                    ? `${length + \" \" + renderPhrase(length)}   с тобой сегодня`\n                    : \"Никто с тобой не тусанет\"}\n            </span>\n        </h2>\n    );\n};\nSearchStatus.propTypes = {\n    length: PropTypes.number\n};\n\nexport default SearchStatus;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst BookMark = ({ status, ...rest }) => {\n    return (\n        <button {...rest}>\n            <i className={\"bi bi-bookmark\" + (status ? \"-heart-fill\" : \"\")}></i>\n        </button>\n    );\n};\nBookMark.propTypes = {\n    status: PropTypes.bool\n};\n\nexport default BookMark;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nconst TableBody = ({ data, columns }) => {\n    const renderContent = (item, column) => {\n        if (columns[column].component) {\n            const component = columns[column].component;\n            if (typeof component === \"function\") {\n                return component(item);\n            }\n            return component;\n        }\n        return _.get(item, columns[column].path);\n    };\n    return (\n        <tbody>\n            {data.map((item) => (\n                <tr key={item._id}>\n                    {Object.keys(columns).map((column) => (\n                        <td key={column}>{renderContent(item, column)}</td>\n                    ))}\n                </tr>\n            ))}\n        </tbody>\n    );\n};\n\nTableBody.propTypes = {\n    data: PropTypes.array.isRequired,\n    columns: PropTypes.object.isRequired\n};\n\nexport default TableBody;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst TableHeader = ({ onSort, selectedSort, columns }) => {\n    const handleSort = (item) => {\n        if (selectedSort.path === item) {\n            onSort({\n                ...selectedSort,\n                order: selectedSort.order === \"asc\" ? \"desc\" : \"asc\"\n            });\n        } else {\n            onSort({ path: item, order: \"asc\" });\n        }\n    };\n    const rendeSortArrow = (selectedSort, currentPath) => {\n        if (selectedSort.path === currentPath) {\n            if (selectedSort.order === \"asc\") {\n                return <i className=\"bi bi-caret-down-fill\"></i>;\n            } else {\n                return <i className=\"bi bi-caret-up-fill\"></i>;\n            }\n        }\n        return null;\n    };\n\n    return (\n        <thead>\n            <tr>\n                {Object.keys(columns).map((column) => (\n                    <th\n                        key={column}\n                        onClick={\n                            columns[column].path\n                                ? () => handleSort(columns[column].path)\n                                : undefined\n                        }\n                        {...{ role: columns[column].path && \"button\" }}\n                        scope=\"col\"\n                    >\n                        {columns[column].name}{\" \"}\n                        {rendeSortArrow(selectedSort, columns[column].path)}\n                    </th>\n                ))}\n            </tr>\n        </thead>\n    );\n};\nTableHeader.propTypes = {\n    onSort: PropTypes.func.isRequired,\n    selectedSort: PropTypes.object.isRequired,\n    columns: PropTypes.object.isRequired\n};\n\nexport default TableHeader;\n","import Table from \"./table\";\nimport TableBody from \"./tableBody\";\nimport TableHeader from \"./tableHeader\";\n\nexport default Table;\n\nexport { TableBody, TableHeader };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TableBody from \"./tableBody\";\nimport TableHeader from \"./tableHeader\";\n\nconst Table = ({ onSort, selectedSort, columns, data, children }) => {\n    return (\n        <table className=\"table\">\n            {children || (\n                <>\n                    <TableHeader {...{ onSort, selectedSort, columns }} />\n                    <TableBody {...{ columns, data }} />\n                </>\n            )}\n        </table>\n    );\n};\nTable.propTypes = {\n    onSort: PropTypes.func,\n    selectedSort: PropTypes.object,\n    columns: PropTypes.object,\n    data: PropTypes.array,\n    children: PropTypes.array\n};\n\nexport default Table;\n","import httpService from \"./http.service\";\n\nconst professionEndpoint = \"profession/\";\n\nconst professionService = {\n    get: async () => {\n        const { data } = await httpService.get(professionEndpoint);\n        return data;\n    }\n};\nexport default professionService;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ProfessionService from \"../services/profession.service\";\nimport { toast } from \"react-toastify\";\n\nconst ProfessionContext = React.createContext();\n\nexport const useProfessions = () => {\n    return useContext(ProfessionContext);\n};\n\nexport const ProfessionProvider = ({ children }) => {\n    const [isLoading, setLoading] = useState(true);\n    const [professions, setProfessions] = useState([]);\n    const [error, setError] = useState(null);\n    useEffect(() => {\n        if (error !== null) {\n            toast(error);\n            setError(null);\n        }\n    }, [error]);\n\n    useEffect(() => {\n        getProfessionsList();\n    }, []);\n    function errorCatcher(error) {\n        const { message } = error.response.data;\n        setError(message);\n    }\n    function getProfession(id) {\n        return professions.find((p) => p._id === id);\n    }\n\n    async function getProfessionsList() {\n        try {\n            const { content } = await ProfessionService.get();\n            setProfessions(content);\n            setLoading(false);\n        } catch (error) {\n            errorCatcher(error);\n        }\n    }\n\n    return (\n        <ProfessionContext.Provider\n            value={{ isLoading, professions, getProfession }}\n        >\n            {children}\n        </ProfessionContext.Provider>\n    );\n};\n\nProfessionProvider.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\n","import React from \"react\";\nimport { useProfessions } from \"../../hooks/useProfession\";\nimport PropTypes from \"prop-types\";\n\nconst Profession = ({ id }) => {\n    const { isLoading, getProfession } = useProfessions();\n    const prof = getProfession(id);\n    if (!isLoading) {\n        return <p>{prof.name}</p>;\n    } else return \"Loading...\";\n};\nProfession.propTypes = {\n    id: PropTypes.string\n};\nexport default Profession;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport BookMark from \"../common/bookmark\";\nimport Qualities from \"./qualities\";\nimport Table from \"../common/table\";\nimport { Link } from \"react-router-dom\";\nimport Profession from \"./profession\";\n\nconst UserTable = ({\n    users,\n    onSort,\n    selectedSort,\n    onToggleBookMark,\n    onDelete,\n    ...rest\n}) => {\n    const columns = {\n        name: {\n            path: \"name\",\n            name: \"Имя\",\n            component: (user) => (\n                <Link to={`/users/${user._id}`}>{user.name}</Link>\n            )\n        },\n        qualities: {\n            name: \"Качества\",\n            component: (user) => <Qualities qualities={user.qualities} />\n        },\n        professions: {\n            name: \"Профессия\",\n            component: (user) => <Profession id={user.profession} />\n        },\n        completedMeetings: {\n            path: \"completedMeetings\",\n            name: \"Встретился, раз\"\n        },\n        rate: { path: \"rate\", name: \"Оценка\" },\n        bookmark: {\n            path: \"bookmark\",\n            name: \"Избранное\",\n            component: (user) => (\n                <BookMark\n                    status={user.bookmark}\n                    onClick={() => onToggleBookMark(user._id)}\n                />\n            )\n        },\n        delete: {\n            component: (user) => (\n                <button\n                    onClick={() => onDelete(user._id)}\n                    className=\"btn btn-danger\"\n                >\n                    delete\n                </button>\n            )\n        }\n    };\n    return (\n        <Table\n            onSort={onSort}\n            selectedSort={selectedSort}\n            columns={columns}\n            data={users}\n        />\n    );\n};\n\nUserTable.propTypes = {\n    users: PropTypes.array.isRequired,\n    onSort: PropTypes.func.isRequired,\n    selectedSort: PropTypes.object.isRequired,\n    onToggleBookMark: PropTypes.func.isRequired,\n    onDelete: PropTypes.func.isRequired\n};\n\nexport default UserTable;\n","import httpService from \"./http.service\";\n\nconst userEndpoint = \"user/\";\n\nconst userService = {\n    get: async () => {\n        const { data } = await httpService.get(userEndpoint);\n        return data;\n    }\n};\nexport default userService;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport userService from \"../services/user.service\";\nimport { toast } from \"react-toastify\";\n\nconst UserContext = React.createContext();\n\nexport const useUser = () => {\n    return useContext(UserContext);\n};\n\nconst UserProvider = ({ children }) => {\n    const [users, setUsers] = useState([]);\n    const [isLoading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    useEffect(() => {\n        getUsers();\n    }, []);\n    useEffect(() => {\n        if (error !== null) {\n            toast(error);\n            setError(null);\n        }\n    }, [error]);\n    async function getUsers() {\n        try {\n            const { content } = await userService.get();\n            setUsers(content);\n            setLoading(false);\n        } catch (error) {\n            errorCatcher(error);\n        }\n    }\n    function errorCatcher(error) {\n        const { message } = error.response.data;\n        setError(message);\n        setLoading(false);\n    }\n    return (\n        <UserContext.Provider value={{ users }}>\n            {!isLoading ? children : \"Loading...\"}\n        </UserContext.Provider>\n    );\n};\n\nUserProvider.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\n\nexport default UserProvider;\n","import UsersListPage from \"./usersListPage\";\nexport default UsersListPage;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { paginate } from \"../../../utils/paginate\";\nimport Pagination from \"../../common/pagination\";\nimport api from \"../../../api\";\nimport GroupList from \"../../common/groupList\";\nimport SearchStatus from \"../../ui/searchStatus\";\nimport UserTable from \"../../ui/usersTable\";\nimport _ from \"lodash\";\nimport { useUser } from \"../../../hooks/useUsers\";\nconst UsersListPage = () => {\n    const { users } = useUser();\n    const [currentPage, setCurrentPage] = useState(1);\n    const [professions, setProfession] = useState();\n    const [searchQuery, setSearchQuery] = useState(\"\");\n    const [selectedProf, setSelectedProf] = useState();\n    const [sortBy, setSortBy] = useState({ path: \"name\", order: \"asc\" });\n    const pageSize = 8;\n\n    const handleDelete = (userId) => {\n        // setUsers(users.filter((user) => user._id !== userId));\n        console.log(userId);\n    };\n    const handleToggleBookMark = (id) => {\n        const newArray = users.map((user) => {\n            if (user._id === id) {\n                return { ...user, bookmark: !user.bookmark };\n            }\n            return user;\n        });\n        // setUsers(newArray);\n        console.log(newArray);\n    };\n\n    useEffect(() => {\n        api.professions.fetchAll().then((data) => setProfession(data));\n    }, []);\n\n    useEffect(() => {\n        setCurrentPage(1);\n    }, [selectedProf, searchQuery]);\n\n    const handleProfessionSelect = (item) => {\n        if (searchQuery !== \"\") setSearchQuery(\"\");\n        setSelectedProf(item);\n    };\n    const handleSearchQuery = ({ target }) => {\n        setSelectedProf(undefined);\n        setSearchQuery(target.value);\n    };\n\n    const handlePageChange = (pageIndex) => {\n        setCurrentPage(pageIndex);\n    };\n    const handleSort = (item) => {\n        setSortBy(item);\n    };\n\n    if (users) {\n        const filteredUsers = searchQuery\n            ? users.filter(\n                  (user) =>\n                      user.name\n                          .toLowerCase()\n                          .indexOf(searchQuery.toLowerCase()) !== -1\n              )\n            : selectedProf\n            ? users.filter(\n                  (user) =>\n                      JSON.stringify(user.profession) ===\n                      JSON.stringify(selectedProf)\n              )\n            : users;\n\n        const count = filteredUsers.length;\n        const sortedUsers = _.orderBy(\n            filteredUsers,\n            [sortBy.path],\n            [sortBy.order]\n        );\n        const usersCrop = paginate(sortedUsers, currentPage, pageSize);\n        const clearFilter = () => {\n            setSelectedProf();\n        };\n\n        return (\n            <div className=\"d-flex\">\n                {professions && (\n                    <div className=\"d-flex flex-column flex-shrink-0 p-3\">\n                        <GroupList\n                            selectedItem={selectedProf}\n                            items={professions}\n                            onItemSelect={handleProfessionSelect}\n                        />\n                        <button\n                            className=\"btn btn-secondary mt-2\"\n                            onClick={clearFilter}\n                        >\n                            {\" \"}\n                            Очистить\n                        </button>\n                    </div>\n                )}\n                <div className=\"d-flex flex-column\">\n                    <SearchStatus length={count} />\n                    <input\n                        type=\"text\"\n                        name=\"searchQuery\"\n                        placeholder=\"Search...\"\n                        onChange={handleSearchQuery}\n                        value={searchQuery}\n                    />\n                    {count > 0 && (\n                        <UserTable\n                            users={usersCrop}\n                            onSort={handleSort}\n                            selectedSort={sortBy}\n                            onDelete={handleDelete}\n                            onToggleBookMark={handleToggleBookMark}\n                        />\n                    )}\n                    <div className=\"d-flex justify-content-center\">\n                        <Pagination\n                            itemsCount={count}\n                            pageSize={pageSize}\n                            currentPage={currentPage}\n                            onPageChange={handlePageChange}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    return \"loading...\";\n};\nUsersListPage.propTypes = {\n    users: PropTypes.array\n};\n\nexport default UsersListPage;\n","export function paginate(items, pageNumber, pageSize) {\n    const startIndex = (pageNumber - 1) * pageSize;\n    return [...items].splice(startIndex, pageSize);\n}\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport EditUserPage from \"../components/page/editUserPage\";\nimport UserPage from \"../components/page/userPage\";\nimport UsersListPage from \"../components/page/usersListPage\";\nimport UserProvider from \"../hooks/useUsers\";\nconst Users = () => {\n    const params = useParams();\n    const { userId, edit } = params;\n    return (\n        <>\n            <UserProvider>\n                {userId ? (\n                    edit ? (\n                        <EditUserPage />\n                    ) : (\n                        <UserPage userId={userId} />\n                    )\n                ) : (\n                    <UsersListPage />\n                )}\n            </UserProvider>\n        </>\n    );\n};\n\nexport default Users;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst CheckBoxField = ({ name, value, onChange, children, error }) => {\n    const handleChange = () => {\n        onChange({ name: name, value: !value });\n    };\n    const getInputClasses = () => {\n        return \"form-check-input\" + (error ? \" is-invalid\" : \"\");\n    };\n    return (\n        <div className=\"form-check mb-4\">\n            <input\n                className={getInputClasses()}\n                type=\"checkbox\"\n                value=\"\"\n                id={name}\n                onChange={handleChange}\n                checked={value}\n            />\n            <label className=\"form-check-label\" htmlFor={name}>\n                {children}\n            </label>\n            {error && <div className=\"invalid-feedback\">{error}</div>}\n        </div>\n    );\n};\nCheckBoxField.propTypes = {\n    name: PropTypes.string,\n    value: PropTypes.bool,\n    onChange: PropTypes.func,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]),\n    error: PropTypes.string\n};\n\nexport default CheckBoxField;\n","import React, { useEffect, useState } from \"react\";\nimport { validator } from \"../../utils/validator\";\nimport TextField from \"../common/form/textField\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\n\nconst LoginForm = () => {\n    const [data, setData] = useState({\n        email: \"\",\n        password: \"\",\n        stayOn: false\n    });\n    const [errors, setErrors] = useState({});\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const validatorConfig = {\n        email: {\n            isRequired: {\n                message: \"Электронная почта обязательна для заполнения\"\n            },\n            isEmail: {\n                message: \"Email введен некорректно\"\n            }\n        },\n        password: {\n            isRequired: {\n                message: \"Пароль обязателен для заполнения\"\n            },\n            isCapitalSymbol: {\n                message: \"Пароль должен содержать хотя бы одну заглавную букву\"\n            },\n            isContainDigit: {\n                message: \"Пароль должен содержать хотя бы одно число\"\n            },\n            min: {\n                message: \"Пароль должен состоять минимум из 8 символов\",\n                value: 8\n            }\n        }\n    };\n    useEffect(() => {\n        validate();\n    }, [data]);\n    const validate = () => {\n        const errors = validator(data, validatorConfig);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const isValid = Object.keys(errors).length === 0;\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        console.log(data);\n    };\n    return (\n        <form onSubmit={handleSubmit}>\n            <TextField\n                label=\"Электронная почта\"\n                name=\"email\"\n                value={data.email}\n                onChange={handleChange}\n                error={errors.email}\n            />\n            <TextField\n                label=\"Пароль\"\n                type=\"password\"\n                name=\"password\"\n                value={data.password}\n                onChange={handleChange}\n                error={errors.password}\n            />\n            <CheckBoxField\n                value={data.stayOn}\n                onChange={handleChange}\n                name=\"stayOn\"\n            >\n                Оставаться в системе\n            </CheckBoxField>\n            <button\n                className=\"btn btn-primary w-100 mx-auto\"\n                type=\"submit\"\n                disabled={!isValid}\n            >\n                Submit\n            </button>\n        </form>\n    );\n};\n\nexport default LoginForm;\n","import React, { useEffect, useState } from \"react\";\nimport { validator } from \"../../utils/validator\";\nimport TextField from \"../common/form/textField\";\nimport api from \"../../api\";\nimport SelectField from \"../common/form/selectField\";\nimport RadioField from \"../common/form/radioField\";\nimport MultiSelectField from \"../common/form/multiSelectField\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\n\nconst RegisterForm = () => {\n    const [data, setData] = useState({\n        email: \"\",\n        password: \"\",\n        profession: \"\",\n        sex: \"male\",\n        qualities: [],\n        licence: false\n    });\n    const [qualities, setQualities] = useState([]);\n    const [professions, setProfession] = useState([]);\n    const [errors, setErrors] = useState({});\n\n    const getProfessionById = (id) => {\n        for (const prof of professions) {\n            if (prof.value === id) {\n                return { _id: prof.value, name: prof.label };\n            }\n        }\n    };\n    const getQualities = (elements) => {\n        const qualitiesArray = [];\n        for (const elem of elements) {\n            for (const quality in qualities) {\n                if (elem.value === qualities[quality].value) {\n                    qualitiesArray.push({\n                        _id: qualities[quality].value,\n                        name: qualities[quality].label,\n                        color: qualities[quality].color\n                    });\n                }\n            }\n        }\n        return qualitiesArray;\n    };\n\n    useEffect(() => {\n        api.professions.fetchAll().then((data) => {\n            const professionsList = Object.keys(data).map((professionName) => ({\n                label: data[professionName].name,\n                value: data[professionName]._id\n            }));\n            setProfession(professionsList);\n        });\n        api.qualities.fetchAll().then((data) => {\n            const qualitiesList = Object.keys(data).map((optionName) => ({\n                value: data[optionName]._id,\n                label: data[optionName].name,\n                color: data[optionName].color\n            }));\n            setQualities(qualitiesList);\n        });\n    }, []);\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const validatorConfig = {\n        email: {\n            isRequired: {\n                message: \"Электронная почта обязательна для заполнения\"\n            },\n            isEmail: {\n                message: \"Email введен некорректно\"\n            }\n        },\n        password: {\n            isRequired: {\n                message: \"Пароль обязателен для заполнения\"\n            },\n            isCapitalSymbol: {\n                message: \"Пароль должен содержать хотя бы одну заглавную букву\"\n            },\n            isContainDigit: {\n                message: \"Пароль должен содержать хотя бы одно число\"\n            },\n            min: {\n                message: \"Пароль должен состоять минимум из 8 символов\",\n                value: 8\n            }\n        },\n        profession: {\n            isRequired: {\n                message: \"Обязательно выберите вашу профессию\"\n            }\n        },\n        licence: {\n            isRequired: {\n                message:\n                    \"Вы не можете использовать наш сервис без подтверждения лицензионного соглашения\"\n            }\n        }\n    };\n    useEffect(() => {\n        validate();\n    }, [data]);\n    const validate = () => {\n        const errors = validator(data, validatorConfig);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const isValid = Object.keys(errors).length === 0;\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        const { profession, qualities } = data;\n        console.log({\n            ...data,\n            profession: getProfessionById(profession),\n            qualities: getQualities(qualities)\n        });\n    };\n    return (\n        <form onSubmit={handleSubmit}>\n            <TextField\n                label=\"Электронная почта\"\n                name=\"email\"\n                value={data.email}\n                onChange={handleChange}\n                error={errors.email}\n            />\n            <TextField\n                label=\"Пароль\"\n                type=\"password\"\n                name=\"password\"\n                value={data.password}\n                onChange={handleChange}\n                error={errors.password}\n            />\n            <SelectField\n                label=\"Выбери свою профессию\"\n                defaultOption=\"Choose...\"\n                options={professions}\n                name=\"profession\"\n                onChange={handleChange}\n                value={data.profession}\n                error={errors.profession}\n            />\n            <RadioField\n                options={[\n                    { name: \"Male\", value: \"male\" },\n                    { name: \"Female\", value: \"female\" },\n                    { name: \"Other\", value: \"other\" }\n                ]}\n                value={data.sex}\n                name=\"sex\"\n                onChange={handleChange}\n                label=\"Выберите ваш пол\"\n            />\n            <MultiSelectField\n                options={qualities}\n                onChange={handleChange}\n                defaultValue={data.qualities}\n                name=\"qualities\"\n                label=\"Выберите ваши качества\"\n            />\n            <CheckBoxField\n                value={data.licence}\n                onChange={handleChange}\n                name=\"licence\"\n                error={errors.licence}\n            >\n                Подтвердить <a>лицензионное соглашение</a>\n            </CheckBoxField>\n            <button\n                className=\"btn btn-primary w-100 mx-auto\"\n                type=\"submit\"\n                disabled={!isValid}\n            >\n                Submit\n            </button>\n        </form>\n    );\n};\n\nexport default RegisterForm;\n","import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport LoginForm from \"../components/ui/loginForm\";\nimport RegisterForm from \"../components/ui/registerForm\";\n\nconst Login = () => {\n    const { type } = useParams();\n    const [formType, setFormType] = useState(\n        type === \"register\" ? type : \"login\"\n    );\n    const toggleFormType = (params) => {\n        setFormType((prevState) =>\n            prevState === \"register\" ? \"login\" : \"register\"\n        );\n    };\n\n    return (\n        <div className=\"container mt-5\">\n            <div className=\"row\">\n                <div className=\"col-md-6 offset-md-3 shadow p-4\">\n                    {formType === \"register\" ? (\n                        <>\n                            <h3 className=\"mb-4\">Register</h3>\n                            <RegisterForm />\n                            <p>\n                                Already have account?{\" \"}\n                                <a role=\"button\" onClick={toggleFormType}>\n                                    {\" \"}\n                                    Sign In\n                                </a>\n                            </p>\n                        </>\n                    ) : (\n                        <>\n                            <h3 className=\"mb-4\">Login</h3>\n                            <LoginForm />\n                            <p>\n                                Dont have account?{\" \"}\n                                <a role=\"button\" onClick={toggleFormType}>\n                                    {\" \"}\n                                    Sign Up\n                                </a>\n                            </p>\n                        </>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Login;\n","import React from \"react\";\n\nconst Main = () => {\n    return <h1> Main Page</h1>;\n};\n\nexport default Main;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nconst NavBar = () => {\n    return (\n        <ul className=\"nav\">\n            <li className=\"nav-item\">\n                <Link className=\"nav-link \" aria-current=\"page\" to=\"/\">\n                    Main\n                </Link>\n            </li>\n            <li className=\"nav-item\">\n                <Link className=\"nav-link \" aria-current=\"page\" to=\"/login\">\n                    Login\n                </Link>\n            </li>\n            <li className=\"nav-item\">\n                <Link className=\"nav-link \" aria-current=\"page\" to=\"/users\">\n                    Users\n                </Link>\n            </li>\n        </ul>\n    );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport Users from \"./layouts/users\";\nimport Login from \"./layouts/login\";\nimport Main from \"./layouts/main\";\nimport NavBar from \"./components/ui/navBar\";\nimport { ProfessionProvider } from \"./hooks/useProfession\";\nimport { QualitiesProvider } from \"./hooks/useQualities\";\nfunction App() {\n    return (\n        <div>\n            <NavBar />\n            <ProfessionProvider>\n                <QualitiesProvider>\n                    <Switch>\n                        <Route\n                            path=\"/users/:userId?/:edit?\"\n                            component={Users}\n                        />\n                        <Route path=\"/login/:type?\" component={Login} />\n                        <Route path=\"/\" exact component={Main} />\n                        <Redirect to=\"/\" />\n                    </Switch>\n                </QualitiesProvider>\n            </ProfessionProvider>\n            <ToastContainer />\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./app/App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}